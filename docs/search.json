{"Structs/ColliderType.html#/s:8MathFarm12ColliderTypeV6Objects6UInt32VvpZ":{"name":"Object","abstract":"<p>Object causing the collision</p>","parent_name":"ColliderType"},"Structs/ColliderType.html#/s:8MathFarm12ColliderTypeV6Buckets6UInt32VvpZ":{"name":"Bucket","abstract":"<p>Bucket that recieves the collision</p>","parent_name":"ColliderType"},"Structs/ColliderType.html":{"name":"ColliderType","abstract":"<p>Describes object for collision type</p>"},"Protocols/PatternLevel.html#/s:8MathFarm12PatternLevelP15getAnimalNameAtSSSi5index_tF":{"name":"getAnimalNameAt(index:)","abstract":"<p>Undocumented</p>","parent_name":"PatternLevel"},"Protocols/PatternLevel.html#/s:8MathFarm12PatternLevelP16getAnimalImageAtSo7UIImageCSi5index_tF":{"name":"getAnimalImageAt(index:)","abstract":"<p>Undocumented</p>","parent_name":"PatternLevel"},"Protocols/PatternLevel.html#/s:8MathFarm12PatternLevelP03getC0SaySiGyF":{"name":"getPattern()","abstract":"<p>Undocumented</p>","parent_name":"PatternLevel"},"Protocols/PatternLevel.html#/s:8MathFarm12PatternLevelP15isAnswerCorrectSbSS6animal_tF":{"name":"isAnswerCorrect(animal:)","abstract":"<p>Undocumented</p>","parent_name":"PatternLevel"},"Protocols/PatternLevel.html#/s:8MathFarm12PatternLevelP012setAndGetNewC0SaySiGyF":{"name":"setAndGetNewPattern()","abstract":"<p>Undocumented</p>","parent_name":"PatternLevel"},"Protocols/PatternLevel.html#/s:8MathFarm12PatternLevelP14getAnimalIndexSiSS4name_tF":{"name":"getAnimalIndex(name:)","abstract":"<p>Undocumented</p>","parent_name":"PatternLevel"},"Protocols/PatternLevel.html#/s:8MathFarm12PatternLevelP09setRandomC0yyF":{"name":"setRandomPattern()","abstract":"<p>Undocumented</p>","parent_name":"PatternLevel"},"Protocols/PatternLevel.html":{"name":"PatternLevel","abstract":"<p>protocol that details the basic functions a PatternLevel class needs to have</p>"},"Functions.html#/s:8MathFarm8degToRad12CoreGraphics7CGFloatVSd6degree_tF":{"name":"degToRad(degree:)","abstract":"<p>Converts degrees to radians</p>"},"Functions.html#/s:8MathFarm10shiftFocusySo6SKNodeC4node_tF":{"name":"shiftFocus(node:)","abstract":"<p>Shifts forcus of Voiceover to node in parameter</p>"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC12staticImages33_58234DDDD0C0394772CA1C4EA9BAAA25LLSaySSGvp":{"name":"staticImages","abstract":"<p>A list of static objects</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC13movableImages33_58234DDDD0C0394772CA1C4EA9BAAA25LLSaySSGvp":{"name":"movableImages","abstract":"<p>A list of movable objects</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC13game_delegateAA18GameViewControllerCSgXwvp":{"name":"game_delegate","abstract":"<p>The referenced GameViewController that created this scene. Weak storage is used so that the instance is deleted once the scene is deleted. If strong storage is used here, duplicate untouchable GameViewControllers will be created</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC11contactFlagSbvp":{"name":"contactFlag","abstract":"<p>Boolean that states whether selected Node is in contact with bucket or not</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC10movingFlagSbvp":{"name":"movingFlag","abstract":"<p>Boolean that states whether selected Node is moved (drageed) or not. If yes, change the zPosition of the node to be +2 than other nodes, so as to aboid collision</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC12ausCrateFlagSbvp":{"name":"ausCrateFlag","abstract":"<p>Boolean that states whether the selected node is recently moved out of crate. Used for Voiceover hinting. P.S that <q>aus</q> comes from German and kinda means <q>out of</q></p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC14backgroundNodeSo08SKSpriteG0Cvp":{"name":"backgroundNode","abstract":"<p>the node that contains the background</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC12selectedNodeSo08SKSpriteG0Cvp":{"name":"selectedNode","abstract":"<p>The sprite that is currently being touched (if any)</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC13winningStreakSiSgvp":{"name":"winningStreak","abstract":"<p>How many times the player has won the current game</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC10backButtonSo12SKSpriteNodeCvp":{"name":"backButton","abstract":"<p>Button to return to the memu</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC10numInCrateSivp":{"name":"numInCrate","abstract":"<p>same as answer variable, numInCrate keep track of the objects put in the bucket</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC20nodeOriginalPositionSC7CGPointVSgvp":{"name":"nodeOriginalPosition","abstract":"<p>Original position of node currently being moved</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC15rightObjectTypeSSvp":{"name":"rightObjectType","abstract":"<p>the type of object that&rsquo;s asked, picked randomly from the list of movableImages</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC10numberTextSo11SKLabelNodeCvp":{"name":"numberText","abstract":"<p>label that shows the current number of objects in crate</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC10correctNums6UInt32Vvp":{"name":"correctNum","abstract":"<p>correctNum is the variable of the answer to the game task, randomly generated with a range btn 1 to 5</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC4numAs6UInt32Vvp":{"name":"numA","abstract":"<p>one of the question number to appear in the question text, randomly generated within the range of correctNum</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC4numBs6UInt32Vvp":{"name":"numB","abstract":"<p>the other question number in question text. numA + numB = correctNum</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC8gameTaskSo11SKLabelNodeCvp":{"name":"gameTask","abstract":"<p>The label that shows the task (or question) for the given level</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC8typeNodeSo08SKSpriteG0Cvp":{"name":"typeNode","abstract":"<p>Node that displays the type of object asked for answer.</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC5crateSo12SKSpriteNodeCvp":{"name":"crate","abstract":"<p>crate node where you have to drag object node to</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC12numIndicatorSo11SKLabelNodeCvp":{"name":"numIndicator","abstract":"<p>label that shows the current number in crate to question</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC7objListSaySSGvp":{"name":"objList","abstract":"<p>the list of object nodes you can drag to crate node</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC17winningStreakTextSSSgvp":{"name":"winningStreakText","abstract":"<p>Accessibility label of the winning streak indicator on scene</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC2fxAA7SoundFXCvp":{"name":"fx","abstract":"<p>SoundFX object to play corresponding sounds</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/c:@M@MathFarm@objc(cs)MedAdditionScene(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize the scene by NSCoder</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/c:@M@MathFarm@objc(cs)MedAdditionScene(im)initWithSize:":{"name":"init(size:)","abstract":"<p>Initialize the scene by size</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/c:@M@MathFarm@objc(cs)MedAdditionScene(im)didMoveToView:":{"name":"didMove(to:)","abstract":"<p>Set up sprites on the screen at their correct position</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/c:@M@MathFarm@objc(cs)MedAdditionScene(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Called when screen is touched</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/c:@M@MathFarm@objc(cs)MedAdditionScene(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handles single finger drag on device and moves touched object if it is a member of movableImages</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/c:@M@MathFarm@objc(cs)MedAdditionScene(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Handles event when touch is lifted. Increments score if apple is in contact with pig. Returns object to original position if wrong object of pig or drag went outside of the screen&rsquo;s borders</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/c:@M@MathFarm@objc(cs)MedAdditionScene(im)didBeginContact:":{"name":"didBegin(_:)","abstract":"<p>Called when contact between two objects is initiated</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/c:@M@MathFarm@objc(cs)MedAdditionScene(im)didEndContact:":{"name":"didEnd(_:)","abstract":"<p>Called when contact between two objects is finished</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC13onSpriteTouch33_58234DDDD0C0394772CA1C4EA9BAAA25LLySo12SKSpriteNodeC07touchedP0_tF":{"name":"onSpriteTouch(touchedNode:)","abstract":"<p>Clears out wobble action from selected node and makes touched node wobble</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC15generateObjList33_58234DDDD0C0394772CA1C4EA9BAAA25LLyyF":{"name":"generateObjList()","abstract":"<p>The function that randomly generates a list of 10 objects to be added to the scene. Ensured that the list contains enough right objects to finish the tasks. Returns the generated object list</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC12updateAnswer33_58234DDDD0C0394772CA1C4EA9BAAA25LLySo12SKSpriteNodeC4node_Sb3addtF":{"name":"updateAnswer(node:add:)","abstract":"<p>Update the score for the level</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC8evaluate33_58234DDDD0C0394772CA1C4EA9BAAA25LLyyF":{"name":"evaluate()","abstract":"<p>evaluate the current answer and the correct number. If matched, remove all <q>fruit</q> objects and bucket object then display the victory text and the button to continue playing, or if winning streak is reached, the button to go to next level</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC11shakeCameraySo12SKSpriteNodeC5layer_Sf8durationtF":{"name":"shakeCamera(layer:duration:)","abstract":"<p>shake the screen</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC17generateStreakBar33_58234DDDD0C0394772CA1C4EA9BAAA25LLyyF":{"name":"generateStreakBar()","abstract":"<p>Generate sprites for winning streak bar</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC13zeroStreakBaryyF":{"name":"zeroStreakBar()","abstract":"<p>helper method for generateStreakBar. Remove prior streak bar nodes before adding new ones</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC9onVictory33_58234DDDD0C0394772CA1C4EA9BAAA25LLyyF":{"name":"onVictory()","abstract":"<p>Undocumented</p>","parent_name":"MedAdditionScene"},"Classes/MedAdditionScene.html#/s:8MathFarm16MedAdditionSceneC11speakStringySS4text_tF":{"name":"speakString(text:)","abstract":"<p>Prompts text to be spoken out by device</p>","parent_name":"MedAdditionScene"},"Classes/AppDelegate.html#/c:@M@MathFarm@objc(cs)AppDelegate(py)window":{"name":"window","abstract":"<p>UI Window that correspondings to where the app is being run</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@MathFarm@objc(cs)AppDelegate(im)application:didFinishLaunchingWithOptions:":{"name":"application(_:didFinishLaunchingWithOptions:)","abstract":"<p>Override point for customization after application launch.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@MathFarm@objc(cs)AppDelegate(im)applicationWillResignActive:":{"name":"applicationWillResignActive(_:)","abstract":"<p>Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state. Use this method to pause ongoing tasks, disable timers, and invalidate graphics rendering callbacks. Games should use this method to pause the game.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@MathFarm@objc(cs)AppDelegate(im)applicationDidEnterBackground:":{"name":"applicationDidEnterBackground(_:)","abstract":"<p>Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later. If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@MathFarm@objc(cs)AppDelegate(im)applicationWillEnterForeground:":{"name":"applicationWillEnterForeground(_:)","abstract":"<p>Called as part of the transition from the background to the active state; here you can undo many of the changes made on entering the background.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@MathFarm@objc(cs)AppDelegate(im)applicationDidBecomeActive:":{"name":"applicationDidBecomeActive(_:)","abstract":"<p>Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@MathFarm@objc(cs)AppDelegate(im)applicationWillTerminate:":{"name":"applicationWillTerminate(_:)","abstract":"<p>Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground</p>","parent_name":"AppDelegate"},"Classes/EasyPatternController.html#/s:8MathFarm21EasyPatternControllerC18easyLevelGenerator33_4DA9B005DC5006A2170B66B845144930LLAA0dgC0Cvp":{"name":"easyLevelGenerator","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(py)zeroAnimal":{"name":"zeroAnimal","abstract":"<p>each of the below outlets are connected to a UIButton element on the screen to be altered throughout the easy pattern game</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(py)firstAnimal":{"name":"firstAnimal","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(py)secondAnimal":{"name":"secondAnimal","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(py)answerSlot":{"name":"answerSlot","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(py)answerChoice0":{"name":"answerChoice0","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(py)answerChoice1":{"name":"answerChoice1","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(py)continueButton":{"name":"continueButton","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(im)didReceiveMemoryWarning":{"name":"didReceiveMemoryWarning()","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/s:8MathFarm21EasyPatternControllerC17fillAnimalDetailsyyF":{"name":"fillAnimalDetails()","abstract":"<p>uses the currently selected pattern to fill in the appropriate images and accessibility labels in the view; also sets tag representing UIButton placement on the screen</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(im)selectAnswer0:":{"name":"selectAnswer0(_:)","abstract":"<p>func that is called when user selected first answer choice possible</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(im)selectAnswer1:":{"name":"selectAnswer1(_:)","abstract":"<p>func that is called when user selects second answer choice possible</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(im)tappedAnimal:":{"name":"tappedAnimal(_:)","abstract":"<p>plays an animal sound corresponding to the animal that has just been tapped</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/c:@M@MathFarm@objc(cs)EasyPatternController(im)checkAnswer:":{"name":"checkAnswer(_:)","abstract":"<p>called when user taps the <q>continue</q> arrow: if answer is correct, then segues to <q>great job</q> screen, else resets answer choice and resumes play of current pattern</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/s:8MathFarm21EasyPatternControllerC06finishD16WithImageAndNameySo7UIImageC5image_SS4nametF":{"name":"finishPatternWithImageAndName(image:name:)","abstract":"<p>responsible for replacing the ? box with the selected answer</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/s:8MathFarm21EasyPatternControllerC11speakStringySS4text_tF":{"name":"speakString(text:)","abstract":"<p>Undocumented</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/s:8MathFarm21EasyPatternControllerC20shiftFocusZeroAnimal33_4DA9B005DC5006A2170B66B845144930LLyyF":{"name":"shiftFocusZeroAnimal()","abstract":"<p>shifts focus of VoiceOver <q>selection box</q> to the first animal in the pattern</p>","parent_name":"EasyPatternController"},"Classes/EasyPatternController.html#/s:8MathFarm21EasyPatternControllerC24shiftFocusContinueButton33_4DA9B005DC5006A2170B66B845144930LLyyF":{"name":"shiftFocusContinueButton()","abstract":"<p>shifts focus of the VoiceOver <q>selection box</q> to the <q>continue arrow</q>; to be called after a user selects an answer choice</p>","parent_name":"EasyPatternController"},"Classes/PatternController.html#/s:8MathFarm17PatternControllerC07currentC0SaySiGvp":{"name":"currentPattern","abstract":"<p>Undocumented</p>","parent_name":"PatternController"},"Classes/PatternController.html#/s:8MathFarm17PatternControllerC21currentSelectedAnswerSSvp":{"name":"currentSelectedAnswer","abstract":"<p>Undocumented</p>","parent_name":"PatternController"},"Classes/PatternController.html#/s:8MathFarm17PatternControllerC9animalRowSaySo8UIButtonCGvp":{"name":"animalRow","abstract":"<p>Undocumented</p>","parent_name":"PatternController"},"Classes/PatternController.html#/s:8MathFarm17PatternControllerC2fxAA7SoundFXCvp":{"name":"fx","abstract":"<p>Undocumented</p>","parent_name":"PatternController"},"Classes/PatternController.html#/s:8MathFarm17PatternControllerC18defaultEmptyAnswerSo7UIImageCvp":{"name":"defaultEmptyAnswer","abstract":"<p>Undocumented</p>","parent_name":"PatternController"},"Classes/PatternController.html#/s:8MathFarm17PatternControllerC17defaultAccessTextSSvp":{"name":"defaultAccessText","abstract":"<p>Undocumented</p>","parent_name":"PatternController"},"Classes/PatternController.html#/s:8MathFarm17PatternControllerC17fillAnimalDetailsyyF":{"name":"fillAnimalDetails()","abstract":"<p>Undocumented</p>","parent_name":"PatternController"},"Classes/PatternController.html#/s:8MathFarm17PatternControllerC06finishC16WithImageAndNameySo7UIImageC5image_SS4nametF":{"name":"finishPatternWithImageAndName(image:name:)","abstract":"<p>Undocumented</p>","parent_name":"PatternController"},"Classes/PatternController.html#/c:@M@MathFarm@objc(cs)PatternController(im)dealloc":{"name":"deinit","abstract":"<p>Undocumented</p>","parent_name":"PatternController"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC12staticImages33_337552E68A170573A49A0EE6B10F94FBLLSaySSGvp":{"name":"staticImages","abstract":"<p>A list of static objects</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC13movableImages33_337552E68A170573A49A0EE6B10F94FBLLSaySSGvp":{"name":"movableImages","abstract":"<p>A list of movable objects</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC13game_delegateAA18GameViewControllerCSgXwvp":{"name":"game_delegate","abstract":"<p>The referenced GameViewController that created this scene. Weak storage is used so that the instance is deleted once the scene is deleted. If strong storage is used here, duplicate untouchable GameViewControllers will be created</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC10correctNums6UInt32Vvp":{"name":"correctNum","abstract":"<p>correctNum is the variable of the answer to the game task, randomly generated with a range btn 1 to 5</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC4numAs6UInt32Vvp":{"name":"numA","abstract":"<p>one of the question number to appear in the question text, randomly generated within the range of correctNum</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC6answerSivp":{"name":"answer","abstract":"<p>Keep track of the objects put in the bucket</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC11contactFlagSbvp":{"name":"contactFlag","abstract":"<p>Boolean that states whether selected Node is in contact with bucket or not</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC10movingFlagSbvp":{"name":"movingFlag","abstract":"<p>Boolean that states whether selected Node is moved (drageed) or not. If yes, change the zPosition of the node to be +2 than other nodes, so as to aboid collision</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC12selectedNodeSo08SKSpriteG0Cvp":{"name":"selectedNode","abstract":"<p>The sprite that is currently being touched (if any)</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC20nodeOriginalPositionSC7CGPointVSgvp":{"name":"nodeOriginalPosition","abstract":"<p>Original position of node currently being moved</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC13winningStreakSiSgvp":{"name":"winningStreak","abstract":"<p>How many times the player has won the current game</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC17winningStreakTextSSSgvp":{"name":"winningStreakText","abstract":"<p>Accessibility label of the winning streak indicator on scene</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC15rightObjectTypeSSvp":{"name":"rightObjectType","abstract":"<p>the type of object that&rsquo;s asked, picked randomly from the list of movableImages</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC8questionSo11SKLabelNodeCvp":{"name":"question","abstract":"<p>The label that shows the task (or question) for the given level</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC10answerTextSo11SKLabelNodeCvp":{"name":"answerText","abstract":"<p>label that shows the current answer to question</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC10backButtonSo12SKSpriteNodeCvp":{"name":"backButton","abstract":"<p>Button to return to the memu</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC14continueButtonSo12SKSpriteNodeCvp":{"name":"continueButton","abstract":"<p>Continue Button to go to next scene at same level</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC8typeNodeSo08SKSpriteG0Cvp":{"name":"typeNode","abstract":"<p>Node that displays the type of object asked for answer.</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC2fx33_337552E68A170573A49A0EE6B10F94FBLLAA7SoundFXCvp":{"name":"fx","abstract":"<p>SoundFX object to play corresponding sounds</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/c:@M@MathFarm@objc(cs)EasyAdditionScene(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize the scene by NSCoder</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/c:@M@MathFarm@objc(cs)EasyAdditionScene(im)initWithSize:":{"name":"init(size:)","abstract":"<p>Initialize the scene by size</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/c:@M@MathFarm@objc(cs)EasyAdditionScene(im)didMoveToView:":{"name":"didMove(to:)","abstract":"<p>Set up sprites on the screen at their correct position</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/c:@M@MathFarm@objc(cs)EasyAdditionScene(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Called when screen is touched</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/c:@M@MathFarm@objc(cs)EasyAdditionScene(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handles single finger drag on device and moves touched object if it is a member of movableImages</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/c:@M@MathFarm@objc(cs)EasyAdditionScene(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Handles event when touch is lifted. Increments score if apple is in contact with pig. Returns object to original position if wrong object of pig or drag went outside of the screen&rsquo;s borders</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/c:@M@MathFarm@objc(cs)EasyAdditionScene(im)didBeginContact:":{"name":"didBegin(_:)","abstract":"<p>Called when contact between two objects is initiated</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/c:@M@MathFarm@objc(cs)EasyAdditionScene(im)didEndContact:":{"name":"didEnd(_:)","abstract":"<p>Called when contact between two objects is finished</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC18generateObjectList33_337552E68A170573A49A0EE6B10F94FBLLSaySSGyF":{"name":"generateObjectList()","abstract":"<p>The function that randomly generates a list of 5 objects &amp; 1 buckect to be added to the scene. Ensured that the list contains enough right objects to finish the tasks. Returns the generated object list</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC17generateStreakBar33_337552E68A170573A49A0EE6B10F94FBLLyyF":{"name":"generateStreakBar()","abstract":"<p>Generate sprites for winning streak bar</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC15incrementAnswer33_337552E68A170573A49A0EE6B10F94FBLLyyF":{"name":"incrementAnswer()","abstract":"<p>Update the score for the level</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC13onSpriteTouch33_337552E68A170573A49A0EE6B10F94FBLLySo12SKSpriteNodeC07touchedR0_tF":{"name":"onSpriteTouch(touchedNode:)","abstract":"<p>Clears out wobble action from selected node and makes touched node wobble</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC8evaluate33_337552E68A170573A49A0EE6B10F94FBLLyyF":{"name":"evaluate()","abstract":"<p>evaluate the current answer and the correct number. If matched, remove all <q>fruit</q> objects and bucket object then display the victory text and the button to continue playing, or if winning streak is reached, the button to go to next level</p>","parent_name":"EasyAdditionScene"},"Classes/EasyAdditionScene.html#/s:8MathFarm17EasyAdditionSceneC11speakStringySS4text_tF":{"name":"speakString(text:)","abstract":"<p>Prompts text to be spoken out by device</p>","parent_name":"EasyAdditionScene"},"Classes/GameViewController.html#/s:8MathFarm18GameViewControllerC8gameTypeSSvp":{"name":"gameType","abstract":"<p>Key that determines which type of scene is generated</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/c:@M@MathFarm@objc(cs)GameViewController(im)loadView":{"name":"loadView()","abstract":"<p>Called when view is ready to be loaded into contorller</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/c:@M@MathFarm@objc(cs)GameViewController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Set properties of the Controller once the view is loaded","parent_name":"GameViewController"},"Classes/GameViewController.html#/c:@M@MathFarm@objc(cs)GameViewController(im)viewWillLayoutSubviews":{"name":"viewWillLayoutSubviews()","abstract":"<p>Configure view and subviews</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/c:@M@MathFarm@objc(cs)GameViewController(im)didReceiveMemoryWarning":{"name":"didReceiveMemoryWarning()","abstract":"<p>Release any cached data, images, etc that aren&rsquo;t in use.</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/c:@M@MathFarm@objc(cs)GameViewController(py)prefersStatusBarHidden":{"name":"prefersStatusBarHidden","abstract":"<p>Set preference for visibility of status bar</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/s:8MathFarm18GameViewControllerC11backToLevelyyF":{"name":"backToLevel()","abstract":"<p>Return to level select screen from a given presented scene. Deinits both GameViewController and scene being presented</p>","parent_name":"GameViewController"},"Classes/GameViewController.html#/c:@M@MathFarm@objc(cs)GameViewController(im)dealloc":{"name":"deinit","abstract":"<p>Actions called when instance is destroyed</p>","parent_name":"GameViewController"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC12staticImages33_9C4C76B3F1E2FE4D6E39514C92435C35LLSaySSGvp":{"name":"staticImages","abstract":"<p>A list of static objects</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC2fx33_9C4C76B3F1E2FE4D6E39514C92435C35LLAA7SoundFXCvp":{"name":"fx","abstract":"<p>SoundFX object to play corresponding sounds</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC13movableImages33_9C4C76B3F1E2FE4D6E39514C92435C35LLSaySSGvp":{"name":"movableImages","abstract":"<p>A list of movable objects</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC9nonApples33_9C4C76B3F1E2FE4D6E39514C92435C35LLSaySSGvp":{"name":"nonApples","abstract":"<p>Subset of movableImages that is not apples</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC9scoreTextSo11SKLabelNodeCvp":{"name":"scoreText","abstract":"<p>Sprite that presents the current score</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC5scoreSivp":{"name":"score","abstract":"<p>Variable that keeps track of the current store</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC12selectedNodeSo08SKSpriteF0Cvp":{"name":"selectedNode","abstract":"<p>The sprite that is currently being touched (if any)</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC8questionSo11SKLabelNodeCvp":{"name":"question","abstract":"<p>The label that shows the task for the given level</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC7victorySo11SKLabelNodeCvp":{"name":"victory","abstract":"<p>A label with vitory text prompted on sucessful completion of level</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC12clearedLevelSo11SKLabelNodeCvp":{"name":"clearedLevel","abstract":"<p>Label that indicates a level was cleared</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC11contactFlagSbvp":{"name":"contactFlag","abstract":"<p>Boolean that states whether selected Node is in contact with pig or not</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC13game_delegateAA18GameViewControllerCSgXwvp":{"name":"game_delegate","abstract":"<p>The referenced GameViewController that created this scene. Weak storage is used so that the instance is deleted once the scene is deleted. If strong storage is used here, duplicate untouchable GameViewControllers will be created</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC13winningStreakSiSgvp":{"name":"winningStreak","abstract":"<p>How many times the player has won the current game</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC20nodeOriginalPositionSC7CGPointVSgvp":{"name":"nodeOriginalPosition","abstract":"<p>Original position of node currently being moved</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC17winningStreakTextSSSgvp":{"name":"winningStreakText","abstract":"<p>Accessibility label for winning streak</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC10backButtonSo12SKSpriteNodeCvp":{"name":"backButton","abstract":"<p>Button to return to the memu</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC14continueButtonSo12SKSpriteNodeCvp":{"name":"continueButton","abstract":"<p>Continue Button to go to next scene at same level</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC10difficultySivp":{"name":"difficulty","abstract":"<p>The Difficulty for the level. 0 = Easy, 1 = Medium</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC9numAppless6UInt32Vvp":{"name":"numApples","abstract":"<p>Randomly generated number of apples to be used for the level</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC12numNonAppless6UInt32Vvp":{"name":"numNonApples","abstract":"<p>Randomly generated number of non apple fruit to be used for the level</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/c:@M@MathFarm@objc(cs)CountingScene(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize the scene by NSCoder</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/c:@M@MathFarm@objc(cs)CountingScene(im)initWithSize:":{"name":"init(size:)","abstract":"<p>Initialize the scene by size</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/c:@M@MathFarm@objc(cs)CountingScene(im)didMoveToView:":{"name":"didMove(to:)","abstract":"<p>Set up sprites on the screen at their correct position</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC17generateStreakBar33_9C4C76B3F1E2FE4D6E39514C92435C35LLyyF":{"name":"generateStreakBar()","abstract":"<p>Generate sprites for winning streak bar</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/c:@M@MathFarm@objc(cs)CountingScene(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Called when screen is touched</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/c:@M@MathFarm@objc(cs)CountingScene(im)didBeginContact:":{"name":"didBegin(_:)","abstract":"<p>Called when contact between two objects is initiated</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/c:@M@MathFarm@objc(cs)CountingScene(im)didEndContact:":{"name":"didEnd(_:)","abstract":"<p>Called when contact between two objects is finished</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC14incrementScoreyyF":{"name":"incrementScore()","abstract":"<p>Update the score for the level</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC9onVictoryyyF":{"name":"onVictory()","abstract":"<p>Called when the correct number of apples are fed to the pig, prompts event text and removes all other game objects (other than back button)</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC13onSpriteTouchySo12SKSpriteNodeC07touchedI0_tF":{"name":"onSpriteTouch(touchedNode:)","abstract":"<p>Clears out wobble action from selected node and makes touched node wobble</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/c:@M@MathFarm@objc(cs)CountingScene(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handles single finger drag on device and moves touched object if it is a member of movableImages</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/c:@M@MathFarm@objc(cs)CountingScene(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Handles event when touch is lifted. Increments score if apple is in contact with pig. Returns object to original position if wrong object of pig or drag went outside of the screen&rsquo;s borders</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/s:8MathFarm13CountingSceneC11speakStringySS4text_tF":{"name":"speakString(text:)","abstract":"<p>Prompts text to be spoken out by device</p>","parent_name":"CountingScene"},"Classes/CountingScene.html#/c:@M@MathFarm@objc(cs)CountingScene(im)dealloc":{"name":"deinit","abstract":"<p>Actions called when instance is destroyed</p>","parent_name":"CountingScene"},"Classes/MainMenuController.html#/c:@M@MathFarm@objc(cs)MainMenuController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Do any additional setup after loading the view, typically from a nib.</p>","parent_name":"MainMenuController"},"Classes/MainMenuController.html#/c:@M@MathFarm@objc(cs)MainMenuController(im)didReceiveMemoryWarning":{"name":"didReceiveMemoryWarning()","abstract":"<p>Dispose of any resources that can be recreated.</p>","parent_name":"MainMenuController"},"Classes/MediumPatternController.html#/s:8MathFarm23MediumPatternControllerC3mlg33_0A4E8E070EFADF315CFD783EF0B9C5E1LLAA0d5LevelC0Cvp":{"name":"mlg","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(py)zeroAnimal":{"name":"zeroAnimal","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(py)firstAnimal":{"name":"firstAnimal","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(py)secondAnimal":{"name":"secondAnimal","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(py)thirdAnimal":{"name":"thirdAnimal","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(py)fourthAnimal":{"name":"fourthAnimal","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(py)answerSlot":{"name":"answerSlot","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(py)answerChoice0":{"name":"answerChoice0","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(py)answerChoice1":{"name":"answerChoice1","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(py)continueButton":{"name":"continueButton","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(im)didReceiveMemoryWarning":{"name":"didReceiveMemoryWarning()","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/s:8MathFarm23MediumPatternControllerC17fillAnimalDetailsyyF":{"name":"fillAnimalDetails()","abstract":"<p>uses the currently selected pattern to fill in the appropriate images and accessibility labels in the view; also sets tag representing UIButton placement on the screen</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(im)selectAnswer0:":{"name":"selectAnswer0(_:)","abstract":"<p>func that is called when user selected first answer choice possible</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(im)selectAnswer1:":{"name":"selectAnswer1(_:)","abstract":"<p>func that is called when user selected second answer choice possible</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(im)tappedAnimal:":{"name":"tappedAnimal(_:)","abstract":"<p>plays an animal sound corresponding to the animal that has just been tapped</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/c:@M@MathFarm@objc(cs)MediumPatternController(im)checkAnswer:":{"name":"checkAnswer(_:)","abstract":"<p>called when user taps the <q>continue</q> arrow: if answer is correct, then segues to <q>great job</q> screen, else resets answer choice and resumes play of current pattern</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/s:8MathFarm23MediumPatternControllerC06finishD16WithImageAndNameySo7UIImageC5image_SS4nametF":{"name":"finishPatternWithImageAndName(image:name:)","abstract":"<p>responsible for replacing the ? box with the selected answer</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/s:8MathFarm23MediumPatternControllerC11speakStringySS4text_tF":{"name":"speakString(text:)","abstract":"<p>Undocumented</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/s:8MathFarm23MediumPatternControllerC20shiftFocusZeroAnimal33_0A4E8E070EFADF315CFD783EF0B9C5E1LLyyF":{"name":"shiftFocusZeroAnimal()","abstract":"<p>shifts focus of VoiceOver <q>selection box</q> to the first animal in the pattern</p>","parent_name":"MediumPatternController"},"Classes/MediumPatternController.html#/s:8MathFarm23MediumPatternControllerC24shiftFocusContinueButton33_0A4E8E070EFADF315CFD783EF0B9C5E1LLyyF":{"name":"shiftFocusContinueButton()","abstract":"<p>shifts focus of the VoiceOver <q>selection box</q> to the <q>continue arrow</q>; to be called after a user selects an answer choice</p>","parent_name":"MediumPatternController"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC12staticImages33_F78DA23B9EA00C2D89182FC3FB730F68LLSaySSGvp":{"name":"staticImages","abstract":"<p>A list of static objects</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC13movableImages33_F78DA23B9EA00C2D89182FC3FB730F68LLSaySSGvp":{"name":"movableImages","abstract":"<p>A list of movable objects</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC13game_delegateAA18GameViewControllerCSgXwvp":{"name":"game_delegate","abstract":"<p>The referenced GameViewController that created this scene. Weak storage is used so that the instance is deleted once the scene is deleted. If strong storage is used here, duplicate untouchable GameViewControllers will be created</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC11contactFlagSbvp":{"name":"contactFlag","abstract":"<p>Boolean that states whether selected Node is in contact with bucket or not</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC10movingFlagSbvp":{"name":"movingFlag","abstract":"<p>Boolean that states whether selected Node is moved (drageed) or not. If yes, change the zPosition of the node to be +2 than other nodes, so as to aboid collision</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC12AusCrateFlagSbvp":{"name":"AusCrateFlag","abstract":"<p>Boolean that states whether the selected node is recently moved out of crate. Used for Voiceover hinting. P.S that <q>aus</q> comes from German and kinda means <q>out of</q></p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC14backgroundNodeSo08SKSpriteG0Cvp":{"name":"backgroundNode","abstract":"<p>the node that contains the background</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC12selectedNodeSo08SKSpriteG0Cvp":{"name":"selectedNode","abstract":"<p>The sprite that is currently being touched (if any)</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC13winningStreakSiSgvp":{"name":"winningStreak","abstract":"<p>How many times the player has won the current game</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC10backButtonSo12SKSpriteNodeCvp":{"name":"backButton","abstract":"<p>Button to return to the memu</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC10numInCrateSivp":{"name":"numInCrate","abstract":"<p>same as answer variable, numInCrate keep track of the objects put in the bucket</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC13objNumChangceSivp":{"name":"objNumChangce","abstract":"<p>used to keep track of the number of object node that enters/leaves crate. Used to fulfill the VoiceOver accessibility to announce how many number of objects are put in/ moved outta crate</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC20nodeOriginalPositionSC7CGPointVSgvp":{"name":"nodeOriginalPosition","abstract":"<p>Original position of node currently being moved</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC15rightObjectTypeSSvp":{"name":"rightObjectType","abstract":"<p>the type of object that&rsquo;s asked, picked randomly from the list of movableImages</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC10numberTextSo11SKLabelNodeCvp":{"name":"numberText","abstract":"<p>label that shows the current number of objects in crate</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC10correctNums6UInt32Vvp":{"name":"correctNum","abstract":"<p>correctNum is the variable of the answer to the game task, randomly generated with a range btn 1 to 5</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC13correctObjNums6UInt32Vvp":{"name":"correctObjNum","abstract":"<p>correctObjNum is the number of the object nodes that is guaranteed to constitute a valid solution. There is 2 to 3 of such nodes in each game, with the number of nodes randomly generated</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC17fakeCorrectObjNums6UInt32Vvp":{"name":"fakeCorrectObjNum","abstract":"<p>fakeCorrectObjNum is the number of the object nodes that is guaranteed to be right object type but added in addition to the guaranteed solution nodes. In a sense they are the <q>dummy</q> variable added to confuse the player, but it is possible that the player can use these nodes to construct a valid answer. There is 1 to 2 of such nodes in each game, with the number of nodes randomly generated</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC4numAs6UInt32Vvp":{"name":"numA","abstract":"<p>one of the question number to appear in the question text, randomly generated within the range of correctNum</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC4numBs6UInt32Vvp":{"name":"numB","abstract":"<p>the other question number in question text. numA + numB = correctNum</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC8gameTaskSo11SKLabelNodeCvp":{"name":"gameTask","abstract":"<p>The label that shows the task (or question) for the given level</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC8typeNodeSo08SKSpriteG0Cvp":{"name":"typeNode","abstract":"<p>Node that displays the type of object asked for answer.</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC11objTypeListSaySSGvp":{"name":"objTypeList","abstract":"<p>the list that contains the list of object nodes&rsquo; type</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC10objNumListSaySSGvp":{"name":"objNumList","abstract":"<p>the list that contains the list of object nodes&rsquo; number</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC17winningStreakTextSSSgvp":{"name":"winningStreakText","abstract":"<p>Accessibility label of the winning streak indicator on scene</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC2fxAA7SoundFXCvp":{"name":"fx","abstract":"<p>SoundFX object to play corresponding sounds</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/c:@M@MathFarm@objc(cs)AdvAdditionScene(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize the scene by NSCoder</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/c:@M@MathFarm@objc(cs)AdvAdditionScene(im)initWithSize:":{"name":"init(size:)","abstract":"<p>Initialize the scene by size</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/c:@M@MathFarm@objc(cs)AdvAdditionScene(im)didMoveToView:":{"name":"didMove(to:)","abstract":"<p>Set up sprites on the screen at their correct position</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/c:@M@MathFarm@objc(cs)AdvAdditionScene(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>Called when screen is touched</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/c:@M@MathFarm@objc(cs)AdvAdditionScene(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>Handles single finger drag on device and moves touched object if it is a member of movableImages</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/c:@M@MathFarm@objc(cs)AdvAdditionScene(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>Handles event when touch is lifted. Increments score if apple is in contact with pig. Returns object to original position if wrong object of pig or drag went outside of the screen&rsquo;s borders</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/c:@M@MathFarm@objc(cs)AdvAdditionScene(im)didBeginContact:":{"name":"didBegin(_:)","abstract":"<p>Called when contact between two objects is initiated</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/c:@M@MathFarm@objc(cs)AdvAdditionScene(im)didEndContact:":{"name":"didEnd(_:)","abstract":"<p>Called when contact between two objects is finished</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC13onSpriteTouch33_F78DA23B9EA00C2D89182FC3FB730F68LLySo12SKSpriteNodeC07touchedS0_tF":{"name":"onSpriteTouch(touchedNode:)","abstract":"<p>Clears out wobble action from selected node and makes touched node wobble</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC15generateObjList33_F78DA23B9EA00C2D89182FC3FB730F68LLyyF":{"name":"generateObjList()","abstract":"<p>the function that randomly generate two list of ten strings, one stating the object type of object node and the other the number the corresponding node carries. It conforms that: There is at least one correct solution; that minimum solution takes 2 - 3 nodes; there will be 1 - 2 guaranteed <q>dummy</q> variables.</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC12updateAnswer33_F78DA23B9EA00C2D89182FC3FB730F68LLySo12SKSpriteNodeC4node_Sb3addtF":{"name":"updateAnswer(node:add:)","abstract":"<p>Update the score for the level</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC8evaluate33_F78DA23B9EA00C2D89182FC3FB730F68LLyyF":{"name":"evaluate()","abstract":"<p>evaluate the current answer and the correct number. If matched, remove all <q>fruit</q> objects and bucket object then display the victory text and the button to continue playing, or if winning streak is reached, the button to go to next level</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC11shakeCamera33_F78DA23B9EA00C2D89182FC3FB730F68LLySo12SKSpriteNodeC5layer_Sf8durationtF":{"name":"shakeCamera(layer:duration:)","abstract":"<p>shake the screen</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC17generateStreakBar33_F78DA23B9EA00C2D89182FC3FB730F68LLyyF":{"name":"generateStreakBar()","abstract":"<p>Generate sprites for winning streak bar</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC13zeroStreakBar33_F78DA23B9EA00C2D89182FC3FB730F68LLyyF":{"name":"zeroStreakBar()","abstract":"<p>helper method for generateStreakBar. Remove prior streak bar nodes before adding new ones</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC9onVictory33_F78DA23B9EA00C2D89182FC3FB730F68LLyyF":{"name":"onVictory()","abstract":"<p>Called when the correct number of objects are in the crate, removes all other game objects (other than back button), prompts victory text and the button to continue playing, or if winning streak is reached, the button to go to next level.</p>","parent_name":"AdvAdditionScene"},"Classes/AdvAdditionScene.html#/s:8MathFarm16AdvAdditionSceneC11speakStringySS4text_tF":{"name":"speakString(text:)","abstract":"<p>Prompts text to be spoken out by device</p>","parent_name":"AdvAdditionScene"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(py)CountingEasy":{"name":"CountingEasy","abstract":"<p>Counting Easy Button reference</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(py)AdditionBtn":{"name":"AdditionBtn","abstract":"<p>Addition Easy button reference</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(py)CountingPro":{"name":"CountingPro","abstract":"<p>Counting Pro button reference</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/s:8MathFarm21LevelSelectControllerC11audioPlayerSo07AVAudioG0CSgvp":{"name":"audioPlayer","abstract":"<p>AudioPlayer object for MathFarm theme music</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Called on view loading</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)didReceiveMemoryWarning":{"name":"didReceiveMemoryWarning()","abstract":"<p>Dispose of any resources that can be recreated.</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)toCountingEasy:":{"name":"toCountingEasy(_:)","abstract":"<p>Transitions to GameViewController to present counting level</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)toCountingPro:":{"name":"toCountingPro(_:)","abstract":"<p>Segue to CountingScene (Pro difficulty) instance</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)toAdditionEasy:":{"name":"toAdditionEasy(_:)","abstract":"<p>Segue to EasyAdditionScene instance</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)toAdditionMedium:":{"name":"toAdditionMedium(_:)","abstract":"<p>Segue to MedAdditionScene instance</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)toAdditionHard:":{"name":"toAdditionHard(_:)","abstract":"<p>Segue to AdvAdditionScene instance</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)backToStartPage:":{"name":"backToStartPage(_:)","abstract":"<p>Undocumented</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)prepareForSegue:sender:":{"name":"prepare(for:sender:)","abstract":"<p>Sets the game type of the GameViewController recieving the segue according to the segue identifier.</p>","parent_name":"LevelSelectController"},"Classes/LevelSelectController.html#/c:@M@MathFarm@objc(cs)LevelSelectController(im)toggleMusic:":{"name":"toggleMusic(_:)","abstract":"<p>Toggles MathFarm theme music off/on</p>","parent_name":"LevelSelectController"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC7pattern33_38230A320A662D25C4B3CC8F0F763A6ALLSaySiGvp":{"name":"pattern","abstract":"<p>Undocumented</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC16possiblePatterns33_38230A320A662D25C4B3CC8F0F763A6ALLSaySSGvp":{"name":"possiblePatterns","abstract":"<p>this array contains all possible patterns that can appear in numerical, integer format; the first 5 integers represent the first animals in the pattern, the 6th int represents the answer, and the last 2 ints are the answer choices</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC12animalImages33_38230A320A662D25C4B3CC8F0F763A6ALLSaySo7UIImageCGvp":{"name":"animalImages","abstract":"<p>this array contains the images of the animals that correspond to the names</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC11animalNames33_38230A320A662D25C4B3CC8F0F763A6ALLSaySSGvp":{"name":"animalNames","abstract":"<p>this array contains the string names of each animal corresponding to 0,1,2,3 respectively</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumCACycfc":{"name":"init()","abstract":"<p>on initilization of the class, set a random pattern</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC15getAnimalNameAtSSSi5index_tF":{"name":"getAnimalNameAt(index:)","abstract":"<p>returns the string animal name at index[0,1,2,3] in animalNames array</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC16getAnimalImageAtSo7UIImageCSi5index_tF":{"name":"getAnimalImageAt(index:)","abstract":"<p>returns the UIImage of the animal at the respective index in the animalImages array</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC03getC0SaySiGyF":{"name":"getPattern()","abstract":"<p>returns the integer representation array of the pattern that is currently chosen</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC15isAnswerCorrectSbSS6animal_tF":{"name":"isAnswerCorrect(animal:)","abstract":"<p>takes in an animal name as a string, and determines whether or not that animal is the correct answer given the current pattern</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC012setAndGetNewC0SaySiGyF":{"name":"setAndGetNewPattern()","abstract":"<p><q>randomly</q> chooses a new pattern, sets it as the current pattern, and returns the integer representation of the pattern; an all-in-one function!</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC14getAnimalIndexSiSS4name_tF":{"name":"getAnimalIndex(name:)","abstract":"<p>NOTE: Not completely tested, so may have a bug. Desired functionality: input an animal name as a string and this will return the index of said animal in the array of animalNames; returns -1 if name not found</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelMedium.html#/s:8MathFarm18PatternLevelMediumC09setRandomC0yyF":{"name":"setRandomPattern()","abstract":"<p>an internal func that selects a <q>random</q> pattern from the array of possiblePatterns, and sets that as the current pattern</p>","parent_name":"PatternLevelMedium"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC7pattern33_38230A320A662D25C4B3CC8F0F763A6ALLSaySiGvp":{"name":"pattern","abstract":"<p>Undocumented</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC16possiblePatterns33_38230A320A662D25C4B3CC8F0F763A6ALLSaySSGvp":{"name":"possiblePatterns","abstract":"<p>this array contains all possible patterns that can appear in numerical, integer format; the first 3 integers represent the first animals in the pattern, the 4th int represents the answer, and the last 2 ints are the answer choices</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC12animalImages33_38230A320A662D25C4B3CC8F0F763A6ALLSaySo7UIImageCGvp":{"name":"animalImages","abstract":"<p>this array contains the images of the animals that correspond to the names</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC11animalNames33_38230A320A662D25C4B3CC8F0F763A6ALLSaySSGvp":{"name":"animalNames","abstract":"<p>this array contains the string names of each animal corresponding to 0,1,2,3 respectively</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyCACycfc":{"name":"init()","abstract":"<p>on initilization of the class, set a random pattern</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC15getAnimalNameAtSSSi5index_tF":{"name":"getAnimalNameAt(index:)","abstract":"<p>returns the string animal name at index[0,1,2,3] in animalNames array</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC16getAnimalImageAtSo7UIImageCSi5index_tF":{"name":"getAnimalImageAt(index:)","abstract":"<p>returns the UIImage of the animal at the respective index in the animalImages array</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC03getC0SaySiGyF":{"name":"getPattern()","abstract":"<p>returns the integer representation array of the pattern that is currently chosen</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC15isAnswerCorrectSbSS6animal_tF":{"name":"isAnswerCorrect(animal:)","abstract":"<p>takes in an animal name as a string, and determines whether or not that animal is the correct answer given the current pattern</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC012setAndGetNewC0SaySiGyF":{"name":"setAndGetNewPattern()","abstract":"<p><q>randomly</q> chooses a new pattern, sets it as the current pattern, and returns the integer representation of the pattern; an all-in-one function!</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC14getAnimalIndexSiSS4name_tF":{"name":"getAnimalIndex(name:)","abstract":"<p>NOTE: Not completely tested, so may have a bug. Desired functionality: input an animal name as a string and this will return the index of said animal in the array of animalNames; returns -1 if name not found</p>","parent_name":"PatternLevelEasy"},"Classes/PatternLevelEasy.html#/s:8MathFarm16PatternLevelEasyC09setRandomC0yyF":{"name":"setRandomPattern()","abstract":"<p>an internal func that selects a <q>random</q> pattern from the array of possiblePatterns, and sets that as the current pattern</p>","parent_name":"PatternLevelEasy"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC11audioPlayer33_8DA3F0CE0618F2B3899BB7919DDB8631LLSo07AVAudioF0CSgvp":{"name":"audioPlayer","abstract":"<p>Audio player backing SoundFX object</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC6pigURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0F0VSgvp":{"name":"pigURL","abstract":"<p>Location of Pig Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC11pigShortURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0G0VSgvp":{"name":"pigShortURL","abstract":"<p>Location of shortened Pig Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC6cowURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0F0VSgvp":{"name":"cowURL","abstract":"<p>Location of Cow Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC6catURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0F0VSgvp":{"name":"catURL","abstract":"<p>Location of Cat Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC7tadaURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0F0VSgvp":{"name":"tadaURL","abstract":"<p>Location of Tada Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC6dogURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0F0VSgvp":{"name":"dogURL","abstract":"<p>Location of Dog Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC8happyURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0F0VSgvp":{"name":"happyURL","abstract":"<p>Location of Happy <q>Woo Hoo!</q> Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC8countURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0F0VSgvp":{"name":"countURL","abstract":"<p>Location of dinging Count Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC8clickURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0F0VSgvp":{"name":"clickURL","abstract":"<p>Location of error indicating Click Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC11shortDogURL33_8DA3F0CE0618F2B3899BB7919DDB8631LL10Foundation0G0VSgvp":{"name":"shortDogURL","abstract":"<p>Location of short dog bark sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC010playAnimalC0ySS6animal_tF":{"name":"playAnimalSound(animal:)","abstract":"<p>Plays sound for corresponding animal</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC9isPlayingSbyF":{"name":"isPlaying()","abstract":"<p>Tells whether audio player is currently playing an effect or not</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC8playTadayyF":{"name":"playTada()","abstract":"<p>Play Tada Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC9playHappyyyF":{"name":"playHappy()","abstract":"<p>Play Happy <q>Woo Hoo!</q> Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC07playPigC033_8DA3F0CE0618F2B3899BB7919DDB8631LLyyF":{"name":"playPigSound()","abstract":"<p>Play Pig Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC07playPigC5ShortyyF":{"name":"playPigSoundShort()","abstract":"<p>Play Pig Sound shortened</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC07playCowC0yyF":{"name":"playCowSound()","abstract":"<p>Play Cow Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC07playDogC0yyF":{"name":"playDogSound()","abstract":"<p>Play Dog Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC012playShortDogC0yyF":{"name":"playShortDogSound()","abstract":"<p>Play Short Dog Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC07playCatC0yyF":{"name":"playCatSound()","abstract":"<p>Play Cat Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC09playCountC0yyF":{"name":"playCountSound()","abstract":"<p>Play dinging Count Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html#/s:8MathFarm7SoundFXC09playClickC0yyF":{"name":"playClickSound()","abstract":"<p>Play error indicating Click Sound</p>","parent_name":"SoundFX"},"Classes/SoundFX.html":{"name":"SoundFX","abstract":"<p>an object that consists of multiple function calls to play sounds; how to use: instantiate SoundFX object, call functions to play sound&ndash;look for examples throughout code</p>"},"Classes/PatternLevelEasy.html":{"name":"PatternLevelEasy","abstract":"<p>this class contains the low-level implementation of the easy pattern difficulty; it contains actual patterns, images, and names of animals</p>"},"Classes/PatternLevelMedium.html":{"name":"PatternLevelMedium","abstract":"<p>this class contains the low-level implementation of the medium (called <q>pro</q> in-game) pattern difficulty; it contains actual patterns, images, and names of animals</p>"},"Classes/LevelSelectController.html":{"name":"LevelSelectController","abstract":"<p>ViewController for level selector</p>"},"Classes/AdvAdditionScene.html":{"name":"AdvAdditionScene","abstract":"<p>Undocumented</p>"},"Classes/MediumPatternController.html":{"name":"MediumPatternController","abstract":"<p>this is the controller responsible for the medium (<q>pro</q>) pattern level; all this controller does is alter the storyboard elements in the current view to create patterns&hellip;class is incredibly similar to EasyPatternController, but this accounts for the larger amount of animals</p>"},"Classes/MainMenuController.html":{"name":"MainMenuController","abstract":"<p>ViewController for main menu</p>"},"Classes/CountingScene.html":{"name":"CountingScene","abstract":"<p>Module that renders a counting level’s current state and maintains its corresponding game logic</p>"},"Classes/GameViewController.html":{"name":"GameViewController","abstract":"<p>Controller responsible for presenting a given level</p>"},"Classes/EasyAdditionScene.html":{"name":"EasyAdditionScene","abstract":"<p>Undocumented</p>"},"Classes/PatternController.html":{"name":"PatternController","abstract":"<p>a parent class that the PatternController classes extend</p>"},"Classes/EasyPatternController.html":{"name":"EasyPatternController","abstract":"<p>this is the controller responsible for the easiest pattern level; all this controller does is alter the storyboard elements in the current view to create patterns</p>"},"Classes/AppDelegate.html":{"name":"AppDelegate","abstract":"<p>A component that complements the storyboard by defining application logic for different states of the application with respect to how it is used on the device (open, closed, paused, etc.)</p>"},"Classes/MedAdditionScene.html":{"name":"MedAdditionScene","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}